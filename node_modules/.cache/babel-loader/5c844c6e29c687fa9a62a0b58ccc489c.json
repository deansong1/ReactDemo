{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6211\\u7684\\u9879\\u76EE\\\\ReactDemo\\\\src\\\\jspLumb\\\\Demo1.js\";\nimport React from \"react\";\nimport jsplumb from 'jsplumb';\nimport $ from 'jquery';\nconst jsPlumbIn = jsplumb.jsPlumb;\n\nclass Demo1 extends React.Component {\n  // 构造函数是唯一可以给 this.state 赋值的地方\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // 挂载阶段\n\n\n  componentDidMount() {\n    var common = {\n      isSource: true,\n      //是否可以拖动(作为连线起点)   \n      isTarget: true,\n      //是否可放置(连线终点)\n      connector: ['StateMachine', {\n        margin: 3\n      }]\n      /*连接器（直线--a straight line，  \r\n      贝塞尔曲线--a Bezier curve，  \r\n      “流程图”--\"flowchart\"     \r\n      “状态机” -- \"state machine\"） 默认贝塞尔*/\n\n    };\n    jsPlumbIn.ready(function () {\n      jsPlumbIn.connect({\n        connector: 'Flowchart',\n        source: 'item_left',\n        target: 'item_right',\n        endpoint: 'Rectangle',\n        paintStyle: {\n          stroke: 'red',\n          strokeWidth: 3\n        },\n        endpointStyle: {\n          fill: 'red',\n          outlineStroke: 'darkgray',\n          outlineWidth: 2\n        },\n        overlays: [['Arrow', {\n          width: 12,\n          length: 12,\n          location: 0.5\n        }]]\n      });\n      jsPlumbIn.addEndpoint('item_left', {\n        anchors: ['Right']\n      }, common);\n      jsPlumbIn.addEndpoint('item_right', {\n        anchor: 'Left'\n      }, common);\n      jsPlumbIn.addEndpoint('item_right', {\n        anchor: 'Right'\n      }, common);\n    });\n    jsPlumbIn.draggable('item_left');\n    jsPlumbIn.draggable('item_right');\n    jsPlumbIn.bind(\"dblclick\", function (conn, originalEvent) {\n      console.log(conn, originalEvent); //如果连接线有label，则获取焦点，如果没有，则添加。                \n      // var labelInfo = that.lineIsHasLabel(conn);\n      // if(labelInfo.isHasLabel){\n      //     labelInfo.currentLabel.removeClass('label-blur').addClass('label-focus');\n      //         var oldText = labelInfo.currentLabel.children('.label-text').html();\n      //         var inputDom = $('<input type=\"text\" class=\"label-input\" value=\"'+oldText+'\"/>')\n      //         setTimeout(function(){\n      //             inputDom.focus();\n      //         },50)\n      //         labelInfo.currentLabel.append(inputDom)\n      //     return false;\n      // }\n\n      let container = document.getElementsByClassName(\"Dotcon\")[0]; // var left =  parseInt(originalEvent.clientX.offset().left)\n      // var top =  parseInt(originalEvent.clientY.offset().top)\n\n      let id = \"label\";\n      let labelDom = $('<div className=\"line-label label-focus\" id=\"' + id + '\" data-path=\"' + conn.id + '\"><span className=\"label-text\"></span><input type=\"text\" className=\"label-input\"/></div>');\n      console.log(labelDom);\n      labelDom.css(\"left\", 186).css(\"top\", 116);\n      let input = labelDom.children('input.label-input');\n      setTimeout(function () {\n        input.focus();\n      }, 50);\n      container.append(labelDom);\n      labelDom.keydown(function (event) {\n        event = event || window.event;\n\n        if (event.keyCode == 13) {\n          var text = input.val();\n\n          if (!text) {\n            labelDom.remove();\n            return false;\n          }\n\n          labelDom.children('span').html(input.val());\n          input.remove();\n          labelDom.removeClass('label-focus').addClass('label-blur');\n          return false;\n        }\n      }); // label 可以拖动\n\n      jsPlumbIn.draggable(id);\n      labelDom.draggable({\n        containment: \"parent\"\n      });\n    });\n  } // 卸载阶段\n\n\n  componentWillUnmount() {// clearInterval(this.timer) 消除定时器\n  }\n\n  render() {\n    let diagramContainer = {\n      padding: '20px',\n      width: '80%',\n      height: '200px',\n      border: '1px solid gray'\n    };\n    let item = {\n      position: 'absolute',\n      height: '80px',\n      width: '80px',\n      border: '1px solid blue',\n      color: 'blue',\n      float: 'left'\n    };\n    let leftPo = {\n      position: 'absolute',\n      height: '80px',\n      width: '80px',\n      border: '1px solid blue',\n      color: 'blue',\n      float: 'left',\n      left: '150px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dotcon\",\n      style: diagramContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"item_left\",\n      style: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"item_right\",\n      style: leftPo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Demo1;","map":{"version":3,"sources":["D:/我的项目/ReactDemo/src/jspLumb/Demo1.js"],"names":["React","jsplumb","$","jsPlumbIn","jsPlumb","Demo1","Component","constructor","props","state","componentDidMount","common","isSource","isTarget","connector","margin","ready","connect","source","target","endpoint","paintStyle","stroke","strokeWidth","endpointStyle","fill","outlineStroke","outlineWidth","overlays","width","length","location","addEndpoint","anchors","anchor","draggable","bind","conn","originalEvent","console","log","container","document","getElementsByClassName","id","labelDom","css","input","children","setTimeout","focus","append","keydown","event","window","keyCode","text","val","remove","html","removeClass","addClass","containment","componentWillUnmount","render","diagramContainer","padding","height","border","item","position","color","float","leftPo","left"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport jsplumb from 'jsplumb';\r\nimport $ from 'jquery';\r\nconst jsPlumbIn = jsplumb.jsPlumb;\r\nclass Demo1 extends React.Component{\r\n   // 构造函数是唯一可以给 this.state 赋值的地方\r\n    constructor(props){  \r\n        super(props)\r\n        this.state = {\r\n            \r\n        }   \r\n    }\r\n     \r\n     // 挂载阶段\r\n     componentDidMount(){\r\n        var common = {\r\n            isSource: true,  //是否可以拖动(作为连线起点)   \r\n            isTarget: true,  //是否可放置(连线终点)\r\n            connector: ['StateMachine',{ margin:3}] /*连接器（直线--a straight line，  \r\n                                                    贝塞尔曲线--a Bezier curve，  \r\n                                                    “流程图”--\"flowchart\"     \r\n                                                    “状态机” -- \"state machine\"） 默认贝塞尔*/\r\n          }\r\n        jsPlumbIn.ready(function () {\r\n            jsPlumbIn.connect({\r\n                connector:'Flowchart',\r\n                source: 'item_left',\r\n                target: 'item_right',\r\n                endpoint: 'Rectangle',\r\n                paintStyle: { stroke: 'red', strokeWidth: 3 },\r\n                endpointStyle: { fill: 'red', outlineStroke: 'darkgray', outlineWidth: 2 },\r\n                overlays: [ ['Arrow', { width: 12, length: 12, location: 0.5 }] ]\r\n            })\r\n            jsPlumbIn.addEndpoint('item_left', {\r\n                anchors: ['Right']\r\n              }, common)\r\n        \r\n              jsPlumbIn.addEndpoint('item_right', {\r\n                anchor: 'Left'\r\n              }, common)\r\n        \r\n              jsPlumbIn.addEndpoint('item_right', {\r\n                anchor: 'Right'\r\n              }, common)\r\n        })\r\n        jsPlumbIn.draggable('item_left')\r\n        jsPlumbIn.draggable('item_right')\r\n      \r\n        jsPlumbIn.bind(\"dblclick\", function (conn, originalEvent) {\r\n           \r\n            console.log(conn, originalEvent)\r\n            //如果连接线有label，则获取焦点，如果没有，则添加。                \r\n            // var labelInfo = that.lineIsHasLabel(conn);\r\n            // if(labelInfo.isHasLabel){\r\n            //     labelInfo.currentLabel.removeClass('label-blur').addClass('label-focus');\r\n            //         var oldText = labelInfo.currentLabel.children('.label-text').html();\r\n            //         var inputDom = $('<input type=\"text\" class=\"label-input\" value=\"'+oldText+'\"/>')\r\n            //         setTimeout(function(){\r\n            //             inputDom.focus();\r\n            //         },50)\r\n            //         labelInfo.currentLabel.append(inputDom)\r\n            //     return false;\r\n            // }\r\n           let container = document.getElementsByClassName(\"Dotcon\")[0];\r\n            // var left =  parseInt(originalEvent.clientX.offset().left)\r\n            // var top =  parseInt(originalEvent.clientY.offset().top)\r\n            let id = \"label\";\r\n            let labelDom = $('<div className=\"line-label label-focus\" id=\"' + id + '\" data-path=\"'+conn.id+'\"><span className=\"label-text\"></span><input type=\"text\" className=\"label-input\"/></div>')\r\n            console.log(labelDom)\r\n            labelDom.css(\"left\", 186).css(\"top\", 116);\r\n            let input = labelDom.children('input.label-input');\r\n            setTimeout(function(){\r\n                input.focus();\r\n            },50)\r\n            container.append(labelDom);\r\n\r\n            labelDom.keydown(function (event) {\r\n                event = event||window.event;\r\n                if(event.keyCode == 13){\r\n                    var text = input.val();\r\n                    if(!text){\r\n                        labelDom.remove();\r\n                        return false;\r\n                    }\r\n                    labelDom.children('span').html(input.val()); \r\n                    input.remove();\r\n                    labelDom.removeClass('label-focus').addClass('label-blur');\r\n                    return false;\r\n                }                              \r\n            });\r\n\r\n            // label 可以拖动\r\n            jsPlumbIn.draggable(id);\r\n            labelDom.draggable({ containment: \"parent\" });    \r\n        });\r\n\r\n     }\r\n     // 卸载阶段\r\n     componentWillUnmount(){\r\n            // clearInterval(this.timer) 消除定时器\r\n         \r\n        }\r\n        render(){\r\n            let diagramContainer={\r\n                padding: '20px',\r\n                width: '80%',\r\n                height: '200px',\r\n                border: '1px solid gray'\r\n            };\r\n            let item={\r\n                position: 'absolute',\r\n                height: '80px',\r\n                width: '80px',\r\n                border: '1px solid blue',\r\n                color: 'blue',\r\n                float: 'left'\r\n            };\r\n            let leftPo={\r\n                position: 'absolute',\r\n                height: '80px',\r\n                width: '80px',\r\n                border: '1px solid blue',\r\n                color: 'blue',\r\n                float: 'left',\r\n                left:'150px'\r\n            };\r\n            return (\r\n                <div className=\"Dotcon\" style={diagramContainer}>\r\n                <div id=\"item_left\" style={item}></div>\r\n                <div id=\"item_right\" style={leftPo}></div>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n export default Demo1;  \r\n   "]},"metadata":{},"sourceType":"module"}