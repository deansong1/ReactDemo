{"ast":null,"code":"// import { DEL_TODO_ITEM } from \"./actionTypes\";\n\n/*该文件主要用来处理传送过来的action*/\n//默认的数据\nconst initState = {\n  count: 0,\n  value: \"默认值\",\n  inputValue: \"关键字\",\n  // status:false\n  initData: [\"搞什么哦\", \"你丫\", \"哼棒棒哦\", \"数据仓库\"]\n};\n\nconst reducer = (state = initState, action) => {\n  console.log(state, action, '111'); // reducer里只能接受state\n  // reducer 要接受action 然后进行逻辑处理\n  // 判断发送过来的action是不是需要的\n  // 如果是我们需要的，就返回一个新的 state\n\n  switch (action.type) {\n    case \"send_type\":\n      return Object.assign({}, state, action);\n\n    case \"add_action\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"send_love\":\n      return true;\n\n    case \"changeInput\":\n      let newState = JSON.parse(JSON.stringify(state));\n      newState.value = action.value;\n      return newState;\n\n    case \"stop_love\":\n      return false;\n\n    case \"addItem\":\n      //input填写增加内容\n      let newState1 = JSON.parse(JSON.stringify(state));\n      newState1.initData.push(newState1.value);\n      newState1.value = \"\";\n      return newState1;\n\n    case \"deleItem\":\n      //点击单行删除\n      let newState2 = JSON.parse(JSON.stringify(state));\n      console.log(newState2);\n      newState2.initData.splice(action.index, 1);\n      return newState2;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer; // const defaultState = {\n//     playArr:[\n//         {id:1,title:'看一小时的react教程',show:false},\n//         {id:2,title:'打一小时DOTA',show:false},\n//         {id:3,title:'看一小时的JS教程',show:false},\n//         {id:4,title:'看一小时的隐秘的角落',show:false},\n//     ],\n//     finishedCount:0\n// }\n// export default (state = defaultState,action)=>{\n//         console.log(state,action);\n//         //删除一条数据\n//         if (action.type === DEL_TODO_ITEM) {\n//             const newState = JSON.parse(JSON.stringify(state));\n//             let finishCount = 0;\n//             //1.删除\n//             newState.playArr.map((item,i) => {\n//                 if (item.id === action.todoId) {\n//                     newState.playArr.splice(i,1);\n//                 }\n//             })\n//             //2.处理选中的 \n//             if (newState.show) {\n//                 finishCount += 1;\n//             }\n//             //3.更新\n//             newState.finishCount = finishCount;\n//             return newState;\n//         }\n//         return state\n// }","map":{"version":3,"sources":["D:/我的项目/ReactDemo/src/store/reducer.js"],"names":["initState","count","value","inputValue","initData","reducer","state","action","console","log","type","Object","assign","newState","JSON","parse","stringify","newState1","push","newState2","splice","index"],"mappings":"AAAA;;AACA;AACA;AACA,MAAMA,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAC,CADQ;AAEdC,EAAAA,KAAK,EAAC,KAFQ;AAGdC,EAAAA,UAAU,EAAC,KAHG;AAId;AACCC,EAAAA,QAAQ,EAAC,CAAE,MAAF,EAAS,IAAT,EAAc,MAAd,EAAqB,MAArB;AALI,CAAlB;;AAOA,MAAMC,OAAO,GAAE,CAACC,KAAK,GAAGN,SAAT,EAAmBO,MAAnB,KAA4B;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBC,MAAlB,EAAyB,KAAzB,EADmC,CAEnC;AACA;AACA;AACA;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,WAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBN,KAAjB,EAAuBC,MAAvB,CAAP;;AACJ,SAAK,YAAL;AACI,aAAO;AACHN,QAAAA,KAAK,EAACK,KAAK,CAACL,KAAN,GAAc;AADjB,OAAP;;AAGJ,SAAK,WAAL;AACI,aAAO,IAAP;;AACJ,SAAK,aAAL;AACI,UAAIY,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,KAAf,CAAX,CAAf;AACAO,MAAAA,QAAQ,CAACX,KAAT,GAAiBK,MAAM,CAACL,KAAxB;AACA,aAAOW,QAAP;;AACJ,SAAK,WAAL;AACI,aAAQ,KAAR;;AACJ,SAAK,SAAL;AAAgB;AACZ,UAAII,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,KAAf,CAAX,CAAhB;AACAW,MAAAA,SAAS,CAACb,QAAV,CAAmBc,IAAnB,CAAwBD,SAAS,CAACf,KAAlC;AACAe,MAAAA,SAAS,CAACf,KAAV,GAAkB,EAAlB;AACA,aAAQe,SAAR;;AACJ,SAAK,UAAL;AAAiB;AACb,UAAIE,SAAS,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,KAAf,CAAX,CAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ;AACAA,MAAAA,SAAS,CAACf,QAAV,CAAmBgB,MAAnB,CAA0Bb,MAAM,CAACc,KAAjC,EAAuC,CAAvC;AACA,aAAQF,SAAR;;AACJ;AACI,aAAOb,KAAP;AA1BR;AA4BP,CAlCD;;AAoCA,eAAeD,OAAf,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { DEL_TODO_ITEM } from \"./actionTypes\";\r\n/*该文件主要用来处理传送过来的action*/\r\n//默认的数据\r\nconst initState = {\r\n    count:0,\r\n    value:\"默认值\",\r\n    inputValue:\"关键字\",\r\n    // status:false\r\n     initData:[ \"搞什么哦\",\"你丫\",\"哼棒棒哦\",\"数据仓库\"]\r\n}\r\nconst reducer =(state = initState,action)=>{\r\n        console.log(state,action,'111')\r\n        // reducer里只能接受state\r\n        // reducer 要接受action 然后进行逻辑处理\r\n        // 判断发送过来的action是不是需要的\r\n        // 如果是我们需要的，就返回一个新的 state\r\n        switch (action.type) {\r\n            case \"send_type\":\r\n                return Object.assign({},state,action);\r\n            case \"add_action\":\r\n                return {\r\n                    count:state.count + 1\r\n                };\r\n            case \"send_love\":\r\n                return true;\r\n            case \"changeInput\":\r\n                let newState = JSON.parse(JSON.stringify(state))\r\n                newState.value = action.value\r\n                return newState;    \r\n            case \"stop_love\":\r\n                return  false;\r\n            case \"addItem\": //input填写增加内容\r\n                let newState1 = JSON.parse(JSON.stringify(state))\r\n                newState1.initData.push(newState1.value)\r\n                newState1.value = \"\";\r\n                return  newState1;\r\n            case \"deleItem\": //点击单行删除\r\n                let newState2 = JSON.parse(JSON.stringify(state))\r\n                console.log(newState2)\r\n                newState2.initData.splice(action.index,1) \r\n                return  newState2;\r\n            default:\r\n                return state;\r\n        }\r\n}\r\n\r\nexport default reducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const defaultState = {\r\n//     playArr:[\r\n//         {id:1,title:'看一小时的react教程',show:false},\r\n//         {id:2,title:'打一小时DOTA',show:false},\r\n//         {id:3,title:'看一小时的JS教程',show:false},\r\n//         {id:4,title:'看一小时的隐秘的角落',show:false},\r\n//     ],\r\n//     finishedCount:0\r\n// }\r\n// export default (state = defaultState,action)=>{\r\n//         console.log(state,action);\r\n//         //删除一条数据\r\n//         if (action.type === DEL_TODO_ITEM) {\r\n//             const newState = JSON.parse(JSON.stringify(state));\r\n//             let finishCount = 0;\r\n//             //1.删除\r\n//             newState.playArr.map((item,i) => {\r\n//                 if (item.id === action.todoId) {\r\n//                     newState.playArr.splice(i,1);\r\n//                 }\r\n//             })\r\n//             //2.处理选中的 \r\n//             if (newState.show) {\r\n//                 finishCount += 1;\r\n//             }\r\n//             //3.更新\r\n//             newState.finishCount = finishCount;\r\n//             return newState;\r\n//         }\r\n//         return state\r\n// }"]},"metadata":{},"sourceType":"module"}